/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three"
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations, PerspectiveCamera, Html } from '@react-three/drei'
import { useFrame, useThree } from "@react-three/fiber"
import useStore from "@/helpers/store"
import useWindowDimensions from "@/helpers/useWindowDimensions"

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('models/animation_4_comp.glb')
  const { actions } = useAnimations(animations, group)

  const scroll = useStore(state => state.scroll)
  const macbookGroup = useRef();
  const iphoneGroup = useRef();


  const { width: viewportWidth } = useWindowDimensions();

  useEffect(() => void (actions["CameraAction"].play().paused = true), [])

  useFrame((state) => {
    actions["CameraAction"].time = THREE.MathUtils.lerp(actions["CameraAction"].time, actions["CameraAction"].getClip().duration * scroll.current, 0.05)
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="screenflip" position={[0, -0.2, 0.36]} rotation={[0.04, 0, 0]}>
          <group name="screen" position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
            <mesh name="Cube008" geometry={nodes.Cube008.geometry} material={materials.aluminium} />
            <mesh name="Cube008_1" geometry={nodes.Cube008_1.geometry} material={materials['matte.001']} />
            <mesh name="Cube008_2" geometry={nodes.Cube008_2.geometry} material={materials['screen.001']} />
          </group>
        </group>

        <group name="Camera" position={[11.73, 7.98, 10.98]} rotation={[1.24, 0.33, -0.76]}>
          <PerspectiveCamera makeDefault far={100} near={0.1} fov={45} rotation={[-Math.PI / 2, 0, 0]}>
            <directionalLight
              castShadow
              position={[10, 20, 15]}
              shadow-camera-right={8}
              shadow-camera-top={8}
              shadow-camera-left={-8}
              shadow-camera-bottom={-8}
              shadow-mapSize-width={1024}
              shadow-mapSize-height={1024}
              intensity={2}
              shadow-bias={-0.0001}
            />
          </PerspectiveCamera>

        </group>

        <mesh name="keyboard" geometry={nodes.keyboard.geometry} material={materials.keys} position={[1.79, -1.41, 3.15]} rotation={[0.42, 0, 0]} />
        <group name="base" position={[0, -1.48, 3.06]} rotation={[0.42, 0, 0]}>
          <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={materials.aluminium} />
          <mesh name="Cube002_1" geometry={nodes.Cube002_1.geometry} material={materials.trackpad} />
        </group>
        <mesh name="touchbar" geometry={nodes.touchbar.geometry} material={materials.touchbar} position={[0, -0.51, 1.09]} rotation={[0.42, 0, 0]} />
        <group name="Frame" position={[0, 3, -3.36]} rotation={[1.67, 0, 0]} scale={4}>
          <mesh name="Plane" geometry={nodes.Plane.geometry} material={materials.Frame} />
          <mesh name="Plane_1" geometry={nodes.Plane_1.geometry} material={materials.Frame2} />
          <mesh name="Plane_2" geometry={nodes.Plane_2.geometry} material={materials.Mic} />
          <mesh name="Plane_3" geometry={nodes.Plane_3.geometry} material={materials.Port} />
          <mesh name="Plane_4" geometry={nodes.Plane_4.geometry} material={materials.Antenna} />
          <mesh name="Apple_Logo" geometry={nodes.Apple_Logo.geometry} material={materials.Logo} />
          <group name="Body">
            <mesh name="Plane002" geometry={nodes.Plane002.geometry} material={materials.Mic} />
            <mesh name="Plane002_1" geometry={nodes.Plane002_1.geometry} material={materials.Body} />
            <mesh name="Plane002_2" geometry={nodes.Plane002_2.geometry} material={materials.Bezel} />
            <mesh name="Plane002_3" geometry={nodes.Plane002_3.geometry} material={materials.Wallpaper} />
            <mesh name="Plane002_4" geometry={nodes.Plane002_4.geometry} material={materials['Camera Glass']} />
            <mesh name="Plane002_5" geometry={nodes.Plane002_5.geometry} material={materials.Lens} />
            <mesh name="Plane002_6" geometry={nodes.Plane002_6.geometry} material={materials['Material.002']} />
          </group>
          <mesh name="Body001" geometry={nodes.Body001.geometry} material={materials['Screen Glass']} />
          <mesh name="Button" geometry={nodes.Button.geometry} material={materials.Frame} />
          <group name="Camera002">
            <mesh name="Plane004" geometry={nodes.Plane004.geometry} material={materials.Mic} />
            <mesh name="Plane004_1" geometry={nodes.Plane004_1.geometry} material={materials.Body} />
            <mesh name="Plane004_2" geometry={nodes.Plane004_2.geometry} material={materials.Glass} />
            <mesh name="Plane004_3" geometry={nodes.Plane004_3.geometry} material={materials['Camera Frame.001']} />
          </group>
          <group name="Camera003">
            <mesh name="Plane001" geometry={nodes.Plane001.geometry} material={materials.Port} />
            <mesh name="Plane001_1" geometry={nodes.Plane001_1.geometry} material={materials.Body} />
            <mesh name="Plane001_2" geometry={nodes.Plane001_2.geometry} material={materials['Camera Glass']} />
            <mesh name="Plane001_3" geometry={nodes.Plane001_3.geometry} material={materials.Lens} />
            <mesh name="Plane001_4" geometry={nodes.Plane001_4.geometry} material={materials['Camera Frame']} />
            <mesh name="Plane001_5" geometry={nodes.Plane001_5.geometry} material={materials['Black Glass']} />
            <mesh name="Plane001_6" geometry={nodes.Plane001_6.geometry} material={materials['Gray Glass']} />
            <mesh name="Plane001_7" geometry={nodes.Plane001_7.geometry} material={materials.Flash} />
          </group>
          <mesh name="Camera004" geometry={nodes.Camera004.geometry} material={materials['Material.003']} />
          <mesh name="Circle003" geometry={nodes.Circle003.geometry} material={materials.Frame} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/animation_4_comp.glb')
